{"ast":null,"code":"var _jsxFileName = \"/Users/shellyganga/Documents/cuproj/varearth/src/addcfdata.js\";\nimport React, { Component } from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst Addcfdata = () => {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      const db = firebase.firestore();\n      const userRef = db.collection(\"UserData\");\n      userRef.doc(user.uid).get().then(getDoc => {\n        let currcfdata = getDoc.data().footprint;\n        let lastcfdata = currcfdata[currcfdata.length - 1];\n        let newcfdata = {\n          timestamp: new Date(Date.now()),\n          value: 0\n        };\n        let lastcftime = new Date(lastcfdata.timestamp.toDate());\n        let newcftime = new Date(newcfdata.timestamp);\n\n        for (var i = 0; i < currcfdata.length; i++) {\n          console.log(currcfdata[i].timestamp);\n          currcfdata[i].timestamp = new Date(currcfdata[i].timestamp.toDate());\n        }\n\n        currcfdata.push(newcfdata);\n        console.log(currcfdata);\n\n        if (lastcftime.getDate() !== newcftime.getDate() || lastcftime.getMonth() !== newcftime.getMonth()) {\n          userRef.doc(user.uid).set({\n            username: getDoc.data().username,\n            email: getDoc.data().email,\n            footprint: currcfdata,\n            challenge: getDoc.data().challenge\n          });\n        }\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nexport default Addcfdata;","map":{"version":3,"sources":["/Users/shellyganga/Documents/cuproj/varearth/src/addcfdata.js"],"names":["React","Component","ReactDoM","firebase","StyledFirebaseAuth","Addcfdata","auth","onAuthStateChanged","user","db","firestore","userRef","collection","doc","uid","get","then","getDoc","currcfdata","data","footprint","lastcfdata","length","newcfdata","timestamp","Date","now","value","lastcftime","toDate","newcftime","i","console","log","push","getDate","getMonth","set","username","email","challenge"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEtBF,EAAAA,QAAQ,CAACG,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AAEzC,QAAGA,IAAH,EAAQ;AAEN,YAAMC,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX;AAEA,YAAMC,OAAO,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,CAAhB;AAEAD,MAAAA,OAAO,CAACE,GAAR,CAAYL,IAAI,CAACM,GAAjB,EAAsBC,GAAtB,GAA4BC,IAA5B,CAAiCC,MAAM,IAAI;AAEzC,YAAIC,UAAU,GAAGD,MAAM,CAACE,IAAP,GAAcC,SAA/B;AACA,YAAIC,UAAU,GAAGH,UAAU,CAACA,UAAU,CAACI,MAAX,GAAkB,CAAnB,CAA3B;AACA,YAAIC,SAAS,GAAG;AACdC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CADG;AAEdC,UAAAA,KAAK,EAAE;AAFO,SAAhB;AAKA,YAAIC,UAAU,GAAG,IAAIH,IAAJ,CAASJ,UAAU,CAACG,SAAX,CAAqBK,MAArB,EAAT,CAAjB;AACA,YAAIC,SAAS,GAAG,IAAIL,IAAJ,CAASF,SAAS,CAACC,SAAnB,CAAhB;;AAEA,aAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,UAAU,CAACI,MAA9B,EAAsCS,CAAC,EAAvC,EAA0C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAYf,UAAU,CAACa,CAAD,CAAV,CAAcP,SAA1B;AACAN,UAAAA,UAAU,CAACa,CAAD,CAAV,CAAcP,SAAd,GAA0B,IAAIC,IAAJ,CAASP,UAAU,CAACa,CAAD,CAAV,CAAcP,SAAd,CAAwBK,MAAxB,EAAT,CAA1B;AACD;;AAEDX,QAAAA,UAAU,CAACgB,IAAX,CAAgBX,SAAhB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;;AAEA,YAAIU,UAAU,CAACO,OAAX,OAAyBL,SAAS,CAACK,OAAV,EAA1B,IAAmDP,UAAU,CAACQ,QAAX,OAA0BN,SAAS,CAACM,QAAV,EAAhF,EAAsG;AACpGzB,UAAAA,OAAO,CAACE,GAAR,CAAYL,IAAI,CAACM,GAAjB,EAAsBuB,GAAtB,CAA0B;AACxBC,YAAAA,QAAQ,EAAErB,MAAM,CAACE,IAAP,GAAcmB,QADA;AAExBC,YAAAA,KAAK,EAAEtB,MAAM,CAACE,IAAP,GAAcoB,KAFG;AAGxBnB,YAAAA,SAAS,EAAEF,UAHa;AAIxBsB,YAAAA,SAAS,EAAEvB,MAAM,CAACE,IAAP,GAAcqB;AAJD,WAA1B;AAMD;AAEF,OA7BD;AA+BD;AACF,GAxCD;AA0CA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA/CD;;AAiDA,eAAenC,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst Addcfdata = () => {\n\n  firebase.auth().onAuthStateChanged(user => {\n\n    if(user){\n\n      const db = firebase.firestore();\n\n      const userRef = db.collection(\"UserData\");\n\n      userRef.doc(user.uid).get().then(getDoc => {\n\n        let currcfdata = getDoc.data().footprint;\n        let lastcfdata = currcfdata[currcfdata.length-1];\n        let newcfdata = {\n          timestamp: new Date(Date.now()),\n          value: 0\n        }\n\n        let lastcftime = new Date(lastcfdata.timestamp.toDate());\n        let newcftime = new Date(newcfdata.timestamp);\n\n        for(var i = 0; i < currcfdata.length; i++){\n          console.log(currcfdata[i].timestamp)\n          currcfdata[i].timestamp = new Date(currcfdata[i].timestamp.toDate());\n        }\n\n        currcfdata.push(newcfdata)\n        console.log(currcfdata)\n\n        if((lastcftime.getDate() !== newcftime.getDate()) || (lastcftime.getMonth() !== newcftime.getMonth())){\n          userRef.doc(user.uid).set({\n            username: getDoc.data().username,\n            email: getDoc.data().email,\n            footprint: currcfdata,\n            challenge: getDoc.data().challenge\n          })\n        }\n\n      })\n\n    }\n  })\n\n  return(\n    <div />\n  )\n}\n\nexport default Addcfdata;\n"]},"metadata":{},"sourceType":"module"}