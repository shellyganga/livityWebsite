{"ast":null,"code":"var _jsxFileName = \"/Users/shellyganga/Documents/cuproj/varearth/src/pushchallenge.js\";\nimport React, { Component } from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst PushChallenge = props => {\n  let pchallenge = props.challenge;\n  let challengeindex = props.index;\n  let newchallenge = {\n    name: pchallenge.Title,\n    value: pchallenge.value,\n    timestamp: new Date(Date.now())\n  };\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      const db = firebase.firestore();\n      const userRef = db.collection(\"UserData\");\n      userRef.doc(user.uid).get().then(getDoc => {\n        /*userRef.doc(user.uid).challenge.push(newchallenge)*/\n        let addchallenge = getDoc.data().challenge;\n        addchallenge.push(newchallenge);\n        let newdailydata = [];\n        getDoc.data().dailychallenge.forEach(element => {\n          if (element.index == challengeindex) {\n            newdailydata.push({\n              complete: true,\n              index: element.index\n            });\n          } else {\n            newdailydata.push(element);\n          }\n        });\n        console.log(addchallenge);\n        userRef.doc(user.uid).set({\n          username: getDoc.data().username,\n          email: getDoc.data().email,\n          footprint: getDoc.data().footprint,\n          challenge: addchallenge,\n          dailychallenge: newdailydata\n        });\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default PushChallenge;","map":{"version":3,"sources":["/Users/shellyganga/Documents/cuproj/varearth/src/pushchallenge.js"],"names":["React","Component","ReactDoM","firebase","StyledFirebaseAuth","PushChallenge","props","pchallenge","challenge","challengeindex","index","newchallenge","name","Title","value","timestamp","Date","now","auth","onAuthStateChanged","user","db","firestore","userRef","collection","doc","uid","get","then","getDoc","addchallenge","data","push","newdailydata","dailychallenge","forEach","element","complete","console","log","set","username","email","footprint"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,MAAIC,UAAU,GAAGD,KAAK,CAACE,SAAvB;AACA,MAAIC,cAAc,GAAGH,KAAK,CAACI,KAA3B;AAEA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAEL,UAAU,CAACM,KADA;AAEjBC,IAAAA,KAAK,EAAEP,UAAU,CAACO,KAFD;AAGjBC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT;AAHM,GAAnB;AAOAd,EAAAA,QAAQ,CAACe,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AACzC,QAAGA,IAAH,EAAQ;AAEN,YAAMC,EAAE,GAAGlB,QAAQ,CAACmB,SAAT,EAAX;AAEA,YAAMC,OAAO,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,CAAhB;AAEAD,MAAAA,OAAO,CAACE,GAAR,CAAYL,IAAI,CAACM,GAAjB,EAAsBC,GAAtB,GAA4BC,IAA5B,CAAiCC,MAAM,IAAI;AAEzC;AACA,YAAIC,YAAY,GAAGD,MAAM,CAACE,IAAP,GAAcvB,SAAjC;AACAsB,QAAAA,YAAY,CAACE,IAAb,CAAkBrB,YAAlB;AAEA,YAAIsB,YAAY,GAAG,EAAnB;AACAJ,QAAAA,MAAM,CAACE,IAAP,GAAcG,cAAd,CAA6BC,OAA7B,CAAqCC,OAAO,IAAI;AAC9C,cAAGA,OAAO,CAAC1B,KAAR,IAAiBD,cAApB,EAAmC;AACjCwB,YAAAA,YAAY,CAACD,IAAb,CAAkB;AAChBK,cAAAA,QAAQ,EAAE,IADM;AAEhB3B,cAAAA,KAAK,EAAE0B,OAAO,CAAC1B;AAFC,aAAlB;AAID,WALD,MAKK;AACHuB,YAAAA,YAAY,CAACD,IAAb,CAAkBI,OAAlB;AACD;AACF,SATD;AAWAE,QAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAP,QAAAA,OAAO,CAACE,GAAR,CAAYL,IAAI,CAACM,GAAjB,EAAsBc,GAAtB,CAA0B;AACxBC,UAAAA,QAAQ,EAAEZ,MAAM,CAACE,IAAP,GAAcU,QADA;AAExBC,UAAAA,KAAK,EAAEb,MAAM,CAACE,IAAP,GAAcW,KAFG;AAGxBC,UAAAA,SAAS,EAAEd,MAAM,CAACE,IAAP,GAAcY,SAHD;AAIxBnC,UAAAA,SAAS,EAAEsB,YAJa;AAKxBI,UAAAA,cAAc,EAAED;AALQ,SAA1B;AAUD,OA7BD;AA+BD;AACF,GAvCD;AAyCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CA1DD;;AA8DA,eAAe5B,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst PushChallenge = (props) => {\n\n  let pchallenge = props.challenge;\n  let challengeindex = props.index;\n\n  let newchallenge = {\n    name: pchallenge.Title,\n    value: pchallenge.value,\n    timestamp: new Date(Date.now())\n  }\n\n\n  firebase.auth().onAuthStateChanged(user => {\n    if(user){\n\n      const db = firebase.firestore();\n\n      const userRef = db.collection(\"UserData\");\n\n      userRef.doc(user.uid).get().then(getDoc => {\n\n        /*userRef.doc(user.uid).challenge.push(newchallenge)*/\n        let addchallenge = getDoc.data().challenge;\n        addchallenge.push(newchallenge);\n\n        let newdailydata = [];\n        getDoc.data().dailychallenge.forEach(element => {\n          if(element.index == challengeindex){\n            newdailydata.push({\n              complete: true,\n              index: element.index\n            })\n          }else{\n            newdailydata.push(element);\n          }\n        })\n\n        console.log(addchallenge)\n        userRef.doc(user.uid).set({\n          username: getDoc.data().username,\n          email: getDoc.data().email,\n          footprint: getDoc.data().footprint,\n          challenge: addchallenge,\n          dailychallenge: newdailydata\n        })\n\n\n\n      })\n\n    }\n  })\n\n  return(\n    <div>\n    </div>\n  )\n\n}\n\n\n\nexport default PushChallenge;\n"]},"metadata":{},"sourceType":"module"}