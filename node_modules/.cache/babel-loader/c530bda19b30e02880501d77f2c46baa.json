{"ast":null,"code":"var _jsxFileName = \"/Users/shellyganga/Desktop/websiteProj/varearth/src/refinedata.js\";\nimport React, { Component } from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport VictoryGraph from './victorygraph';\n\nconst Refine = props => {\n  let data = props.data;\n  let xy = [];\n  let tick = [];\n  let tempxy = data;\n  let newxy = [];\n  var index = 1;\n  tempxy.map(variable => {\n    newxy.push({\n      date: index,\n      footprint: variable.value\n    });\n    index++;\n  });\n  let tickvalues = [];\n  var date;\n  tempxy.map(variable => {\n    date = new Date(variable.timestamp.toDate());\n    tickvalues.push(date.getMonth() + 1 + \"/\" + date.getDate());\n  });\n  xy = newxy;\n  tick = tickvalues;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(VictoryGraph, {\n    xy: xy,\n    tick: tick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n/*\nclass Refine extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data: props.data,\n      xy: [],\n      tick: []\n    }\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if(this.props != prevProps){\n  //     this.setState({\n  //       data: this.props.data\n  //     })\n  //   }\n  // }\n\n  componentDidMount(){\n    //from data to array of x and y data in json {x: x, y: y}\n    //from data to tick value (array of x-value label)\n    console.log(this.state.data)\n\n    let tempxy = this.state.data;\n    let newxy = [];\n    var index = 1;\n    tempxy.map(variable => {\n      newxy.push({date: index, footprint: variable.value});\n      index++\n    });\n\n    let tickvalues = [];\n    tempxy.map(variable => {\n      var date = new Date(Date(variable.timestamp));\n      tickvalues.push((date.getMonth()+1) + \"/\" + date.getDate());\n    });\n\n    console.log(newxy);\n    console.log(tickvalues);\n    this.setState({\n      xy: newxy,\n      tick: tickvalues\n    })\n    console.log(this.state.xy);\n    console.log(this.state.tick);\n\n  }\n\n  render(){\n    if (this.state.xy.length > 0, this.state.tick.length > 0) {\n      return(\n        <div>\n          <VictoryGraph xy={this.state.xy} tick={this.state.tick} />\n        </div>\n      )\n    } else {\n      return(\n        <div />\n      )\n    }\n  }\n\n}\n*/\n\n\nexport default Refine;","map":{"version":3,"sources":["/Users/shellyganga/Desktop/websiteProj/varearth/src/refinedata.js"],"names":["React","Component","ReactDoM","firebase","VictoryGraph","Refine","props","data","xy","tick","tempxy","newxy","index","map","variable","push","date","footprint","value","tickvalues","Date","timestamp","toDate","getMonth","getDate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIC,EAAE,GAAG,EAAT;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAGH,IAAb;AACA,MAAII,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACAF,EAAAA,MAAM,CAACG,GAAP,CAAWC,QAAQ,IAAI;AACrBH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAACC,MAAAA,IAAI,EAAEJ,KAAP;AAAcK,MAAAA,SAAS,EAAEH,QAAQ,CAACI;AAAlC,KAAX;AACAN,IAAAA,KAAK;AACN,GAHD;AAKA,MAAIO,UAAU,GAAG,EAAjB;AACA,MAAIH,IAAJ;AAEAN,EAAAA,MAAM,CAACG,GAAP,CAAWC,QAAQ,IAAI;AACrBE,IAAAA,IAAI,GAAG,IAAII,IAAJ,CAASN,QAAQ,CAACO,SAAT,CAAmBC,MAAnB,EAAT,CAAP;AACAH,IAAAA,UAAU,CAACJ,IAAX,CAAiBC,IAAI,CAACO,QAAL,KAAgB,CAAjB,GAAsB,GAAtB,GAA4BP,IAAI,CAACQ,OAAL,EAA5C;AACD,GAHD;AAKAhB,EAAAA,EAAE,GAAGG,KAAL;AACAF,EAAAA,IAAI,GAAGU,UAAP;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEX,EAAlB;AAAsB,IAAA,IAAI,EAAEC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CA9BD;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,eAAeJ,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDoM from 'react-dom';\nimport firebase from './Firestore';\nimport VictoryGraph from './victorygraph'\n\n\nconst Refine = (props) => {\n\n  let data = props.data;\n  let xy = [];\n  let tick = [];\n  let tempxy = data;\n  let newxy = [];\n  var index = 1;\n  tempxy.map(variable => {\n    newxy.push({date: index, footprint: variable.value});\n    index++\n  });\n\n  let tickvalues = [];\n  var date;\n\n  tempxy.map(variable => {\n    date = new Date(variable.timestamp.toDate());\n    tickvalues.push((date.getMonth()+1) + \"/\" + date.getDate());\n  });\n\n  xy = newxy;\n  tick = tickvalues;\n\n  return(\n    <div>\n      <VictoryGraph xy={xy} tick={tick} />\n    </div>\n  )\n\n}\n\n\n\n/*\nclass Refine extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data: props.data,\n      xy: [],\n      tick: []\n    }\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if(this.props != prevProps){\n  //     this.setState({\n  //       data: this.props.data\n  //     })\n  //   }\n  // }\n\n  componentDidMount(){\n    //from data to array of x and y data in json {x: x, y: y}\n    //from data to tick value (array of x-value label)\n    console.log(this.state.data)\n\n    let tempxy = this.state.data;\n    let newxy = [];\n    var index = 1;\n    tempxy.map(variable => {\n      newxy.push({date: index, footprint: variable.value});\n      index++\n    });\n\n    let tickvalues = [];\n    tempxy.map(variable => {\n      var date = new Date(Date(variable.timestamp));\n      tickvalues.push((date.getMonth()+1) + \"/\" + date.getDate());\n    });\n\n    console.log(newxy);\n    console.log(tickvalues);\n    this.setState({\n      xy: newxy,\n      tick: tickvalues\n    })\n    console.log(this.state.xy);\n    console.log(this.state.tick);\n\n  }\n\n  render(){\n    if (this.state.xy.length > 0, this.state.tick.length > 0) {\n      return(\n        <div>\n          <VictoryGraph xy={this.state.xy} tick={this.state.tick} />\n        </div>\n      )\n    } else {\n      return(\n        <div />\n      )\n    }\n  }\n\n}\n*/\nexport default Refine;\n"]},"metadata":{},"sourceType":"module"}