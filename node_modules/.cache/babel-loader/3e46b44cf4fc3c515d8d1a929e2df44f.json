{"ast":null,"code":"var _jsxFileName = \"/Users/shellyganga/Documents/cuproj/varearth/src/carbonForm.js\";\nimport React from 'react';\nimport './carbonForm.css';\nimport firebase from \"./Firestore\";\n\nclass CarbonForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      // event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value,\n        carbonScore1: event.target.carbonScore1,\n        carbonScore2: event.target.carbonScore2,\n        carbonScore3: event.target.carbonScore3,\n        carbonScore4: event.target.carbonScore4,\n        carbonScoreAve: event.target.carbonScoreAve\n      });\n    };\n\n    this.handleSubmit = event => {\n      if (this.state.response1 == null || this.state.response2 == null || this.state.response3 == null || this.state.response4 == null) {\n        alert(\"One or more fields are blank\");\n      } else {\n        this.state.carbonScore1 = this.calculate(71, this.state.response1, this.state.carbonScore1);\n        console.log(\"1 \" + this.state.carbonScore1); //i am assuming 1 trash bag per day is average\n\n        this.state.carbonScore2 = this.calculate(14, this.state.response2, this.state.carbonScore2);\n        console.log(\"2 \" + this.state.carbonScore2); //average extricity bill is 110\n\n        this.state.carbonScore3 = this.calculate(220, this.state.response3, this.state.carbonScore3);\n        console.log(\"3 \" + this.state.carbonScore3); //average amount of shower time per day 10\n\n        this.state.carbonScore4 = this.calculate(20, this.state.response4, this.state.carbonScore4);\n        console.log(\"4 \" + this.state.carbonScore4);\n        this.state.carbonScoreAve = (this.state.carbonScore1 + this.state.carbonScore2 + this.state.carbonScore3 + this.state.carbonScore4) / 4;\n        console.log(this.state.carbonScoreAve);\n        this.setState({\n          calculate: true\n        });\n        console.log(this.state.calculate);\n\n        if (this.state.calculate == true) {\n          this.setState({\n            response1: null,\n            response2: null,\n            response3: null,\n            response4: null\n          });\n          console.log(this.state.response1);\n        }\n\n        console.log(this.state.calculate);\n      }\n\n      event.preventDefault();\n    };\n\n    this.calculate = (max, response, score) => {\n      if (.10 * max >= response) {\n        return score = 1;\n      } else if (.20 * max >= response) {\n        return score = 2;\n      } else if (.30 * max >= response) {\n        return score = 3;\n      } else if (.40 * max >= response) {\n        return score = 4;\n      } else if (.50 * max >= response) {\n        return score = 5;\n      } else if (.60 * max >= response) {\n        return score = 6;\n      } else if (.70 * max >= response) {\n        return score = 7;\n      } else if (.80 * max >= response) {\n        return score = 8;\n      } else if (.90 * max >= response) {\n        return score = 9;\n      } else if (1 * max >= response || response >= max) {\n        return score = 10;\n      }\n    };\n\n    this.state = {\n      response1: null,\n      response2: null,\n      response3: null,\n      response4: null,\n      carbonScore1: null,\n      carbonScore2: null,\n      carbonScore3: null,\n      carbonScore4: null,\n      carbonScoreAve: null,\n      calculate: false\n    };\n  } // clicked = () => {\n  //   this.setState({\n  //     carbonScore1: null,\n  //     carbonScore2: null,\n  //     carbonScore3: null,\n  //     carbonScore4: null\n  //   });\n  // };\n  // calculateSum = () => {\n  //   this.setState({\n  //     click: true\n  //   });\n  // };\n  // updateInput = e => {\n  // \tthis.setState({\n  //   \t[e.target.name]: e.target.value\n  // \t});\n  // }\n  //\n  // addUser = e => {\n  // \t//prevents automatic refresh of page when form is submitted\n  // \te.preventDefault();\n  //\n  // \tconst db = firebase.firestore();\n  // \tdb.settings({\n  //     \ttimestampsInSnapshots: true\n  // \t});\n  // \tconst userRef = db.collection(\"users\").add({\n  //       response1: this.state.response1,\n  //       response2: this.state.response2,\n  //       response3: this.state.response3,\n  //       response4: this.state.response4\n  // \t});\n  //\n  // \tthis.setState({\n  //   \tresponse1: \"\",\n  //     response2: \"\",\n  //     response3: \"\",\n  //     response4: \"\"\n  // \t});\n  // }\n\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"carbonform-questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"how many miles do you drive per day?\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"response1\",\n      placeholder: \"Response\",\n      onChange: this.handleChange,\n      value: this.state.response1,\n      min: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"carbonform-questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"how many trash bags do you fill per week?\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"response2\",\n      placeholder: \"Response\",\n      onChange: this.handleChange,\n      value: this.state.response2,\n      min: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"carbonform-questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"what was the cost of your most recent electricity bill?\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"response3\",\n      placeholder: \"Response\",\n      onChange: this.handleChange,\n      value: this.state.response3,\n      min: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"carbonform-questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"what is the average amount of time you spend showering per day?\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"response4\",\n      placeholder: \"Response\",\n      onChange: this.handleChange,\n      value: this.state.response4,\n      min: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default CarbonForm;","map":{"version":3,"sources":["/Users/shellyganga/Documents/cuproj/varearth/src/carbonForm.js"],"names":["React","firebase","CarbonForm","Component","constructor","handleChange","event","setState","target","name","value","carbonScore1","carbonScore2","carbonScore3","carbonScore4","carbonScoreAve","handleSubmit","state","response1","response2","response3","response4","alert","calculate","console","log","preventDefault","max","response","score","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './carbonForm.css';\nimport firebase from \"./Firestore\";\n\nclass CarbonForm extends React.Component{\n\n  constructor(){\n  \tsuper();\n  \tthis.state = {\n    \tresponse1: null,\n    \tresponse2: null,\n      response3: null,\n      response4: null,\n      carbonScore1: null,\n      carbonScore2: null,\n      carbonScore3: null,\n      carbonScore4: null,\n      carbonScoreAve: null,\n      calculate: false\n\n  \t};\n  }\n  // clicked = () => {\n  //   this.setState({\n  //     carbonScore1: null,\n  //     carbonScore2: null,\n  //     carbonScore3: null,\n  //     carbonScore4: null\n  //   });\n  // };\n  // calculateSum = () => {\n  //   this.setState({\n  //     click: true\n  //   });\n  // };\n  // updateInput = e => {\n  // \tthis.setState({\n  //   \t[e.target.name]: e.target.value\n  // \t});\n  // }\n  //\n  // addUser = e => {\n  // \t//prevents automatic refresh of page when form is submitted\n  // \te.preventDefault();\n  //\n  // \tconst db = firebase.firestore();\n  // \tdb.settings({\n  //     \ttimestampsInSnapshots: true\n  // \t});\n  // \tconst userRef = db.collection(\"users\").add({\n  //       response1: this.state.response1,\n  //       response2: this.state.response2,\n  //       response3: this.state.response3,\n  //       response4: this.state.response4\n  // \t});\n  //\n  // \tthis.setState({\n  //   \tresponse1: \"\",\n  //     response2: \"\",\n  //     response3: \"\",\n  //     response4: \"\"\n  // \t});\n  // }\n  handleChange = (event) => {\n        // event.preventDefault();\n        this.setState({\n            [event.target.name]: event.target.value,\n            carbonScore1: event.target.carbonScore1,\n            carbonScore2: event.target.carbonScore2,\n            carbonScore3: event.target.carbonScore3,\n            carbonScore4: event.target.carbonScore4,\n            carbonScoreAve: event.target.carbonScoreAve,\n        });\n    }\n\nhandleSubmit = (event) => {\n   if(this.state.response1 == null || this.state.response2 == null || this.state.response3 == null || this.state.response4 == null){\n     alert(\"One or more fields are blank\");\n   }else{\n     this.state.carbonScore1 = this.calculate(71, this.state.response1, this.state.carbonScore1)\n     console.log(\"1 \" + this.state.carbonScore1);\n     //i am assuming 1 trash bag per day is average\n     this.state.carbonScore2 = this.calculate(14, this.state.response2, this.state.carbonScore2)\n     console.log(\"2 \" + this.state.carbonScore2);\n     //average extricity bill is 110\n     this.state.carbonScore3 = this.calculate(220, this.state.response3, this.state.carbonScore3)\n     console.log(\"3 \" + this.state.carbonScore3);\n     //average amount of shower time per day 10\n     this.state.carbonScore4 = this.calculate(20, this.state.response4, this.state.carbonScore4)\n     console.log(\"4 \" + this.state.carbonScore4);\n\n     this.state.carbonScoreAve = (this.state.carbonScore1 + this.state.carbonScore2 + this.state.carbonScore3 + this.state.carbonScore4)/4\n     console.log(this.state.carbonScoreAve)\n       this.setState({\n         calculate: true\n       });\n     console.log(this.state.calculate)\n     if(this.state.calculate==true)\n     {\n       this.setState({\n\n           response1: null,\n           response2: null,\n           response3: null,\n           response4: null,\n       });\n       console.log(this.state.response1)\n     }\n     console.log(this.state.calculate)\n  }\n\n   event.preventDefault();\n\n\n}\n  calculate = (max, response, score) => {\n    if(.10*max>=response){\n      return score=1\n    }else if(.20*max>=response){\n        return score=2\n    }else if(.30*max>=response){\n        return score=3\n    }else if(.40*max>=response){\n          return  score=4\n    }else if(.50*max>=response){\n      return   score=5\n    }else if(.60*max>=response){\n       return score=6\n    }else if(.70*max>=response){\n      return   score=7\n    }else if(.80*max>=response){\n      return  score=8\n    }else if(.90*max>=response){\n         return score=9\n    }else if(1*max>=response || response>=max){\n      return score=10\n    }\n  };\n\n\n\n\n\n\n  render(){\n\treturn (\n    \t<form onSubmit={this.handleSubmit}>\n        <div>\n          <div className=\"carbonform-questions\">\n          how many miles do you drive per day?\n          </div>\n          <input\n            \ttype = \"number\"\n            \tname = \"response1\"\n            \tplaceholder = \"Response\"\n            \tonChange = {this.handleChange}\n            \tvalue = {this.state.response1}\n              min = {0}\n\n        \t/>\n\n          <div className=\"carbonform-questions\">\n          how many trash bags do you fill per week?\n          </div>\n        \t<input\n            \ttype = \"number\"\n            \tname = \"response2\"\n            \tplaceholder = \"Response\"\n            \tonChange = {this.handleChange}\n            \tvalue = {this.state.response2}\n              min = {0}\n        \t/>\n          <div className=\"carbonform-questions\">\n          what was the cost of your most recent electricity bill?\n          </div>\n        \t<input\n            \ttype = \"number\"\n            \tname = \"response3\"\n            \tplaceholder = \"Response\"\n            \tonChange = {this.handleChange}\n            \tvalue = {this.state.response3}\n              min = {0}\n        \t/>\n          <div className=\"carbonform-questions\">\n          what is the average amount of time you spend showering per day?\n          </div>\n        \t<input\n            \ttype = \"number\"\n            \tname = \"response4\"\n            \tplaceholder = \"Response\"\n            \tonChange = {this.handleChange}\n            \tvalue = {this.state.response4}\n              min = {0}\n        \t/>\n        </div>\n        \t<button type = \"submit\" >Submit</button>\n    \t</form>\n\n\t);\n  }\n\n}\n\nexport default CarbonForm;\n"]},"metadata":{},"sourceType":"module"}